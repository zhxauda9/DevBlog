const express = require('express');
const Blog = require('../models/blog');
const router = express.Router();

// üìå –°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–≥–∞ (POST /blogs)
router.post('/blogs', async (req, res) => {
    try {
        const { title, body, author } = req.body;
        if (!title || !body) {
            return res.status(400).json({ message: "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–ª–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" });
        }

        const blog = new Blog({ title, body, author });
        await blog.save();
        res.status(201).json(blog);
    } catch (error) {
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
    }
});

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –±–ª–æ–≥–æ–≤ (GET /blogs)
router.get('/blogs', async (req, res) => {
    try {
        const blogs = await Blog.find();
        res.json(blogs);
    } catch (error) {
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
    }
});

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –±–ª–æ–≥–∞ –ø–æ ID (GET /blogs/:id)
router.get('/blogs/:id', async (req, res) => {
    try {
        const blog = await Blog.findById(req.params.id);
        if (!blog) return res.status(404).json({ message: "–ë–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω" });
        res.json(blog);
    } catch (error) {
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
    }
});

// üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–ª–æ–≥–∞ (PUT /blogs/:id)
router.put('/blogs/:id', async (req, res) => {
    try {
        const { title, body, author } = req.body;
        const updatedBlog = await Blog.findByIdAndUpdate(req.params.id, { title, body, author }, { new: true });

        if (!updatedBlog) return res.status(404).json({ message: "–ë–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω" });
        res.json(updatedBlog);
    } catch (error) {
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
    }
});

// üìå –£–¥–∞–ª–µ–Ω–∏–µ –±–ª–æ–≥–∞ (DELETE /blogs/:id)
router.delete('/blogs/:id', async (req, res) => {
    try {
        const deletedBlog = await Blog.findByIdAndDelete(req.params.id);
        if (!deletedBlog) return res.status(404).json({ message: "–ë–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω" });

        res.json({ message: "–ë–ª–æ–≥ —É–¥–∞–ª–µ–Ω" });
    } catch (error) {
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
    }
});

module.exports = router;
